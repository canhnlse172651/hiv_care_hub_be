// Enums
enum UserStatus {
  ACTIVE
  INACTIVE
  BLOCKED
}

enum HTTPMethod {
  GET
  POST
  PUT
  DELETE
  PATCH
  OPTIONS
  HEAD
}

enum UserRole {
  ADMIN
  DOCTOR
  STAFF
  PATIENT
}

enum Shift {
  MORNING
  AFTERNOON
  FULL_DAY
}

enum AppointmentType {
  ONLINE
  OFFLINE
}

enum AppointmentStatus {
  PENDING
  CONFIRMED
  CANCELLED
  COMPLETED
}

enum ReminderType {
  MEDICINE
  APPOINTMENT
}

enum TestType {
  CD4
  HIV_VIRAL_LOAD
}

enum DayOfWeek {
  MONDAY
  TUESDAY
  WEDNESDAY
  THURSDAY
  FRIDAY
  SATURDAY
  SUNDAY
}

enum ServiceType {
  TEST
  CONSULT
  TREATMENT
}

enum VerificationCodeCodeType {
  REGISTER
  FORGOT_PASSWORD
}

// Tables
Table User {
  id int [pk, increment]
  email varchar(500) [unique]
  name varchar(500)
  password varchar(500)
  phoneNumber varchar(50)
  avatar varchar(1000) [null]
  totpSecret varchar(1000) [unique, null]
  status UserStatus [default: 'INACTIVE']
  roleId int [ref: > Role.id]
  createdById int [null, ref: > User.id]
  updatedById int [null, ref: > User.id]
  deletedAt timestamp [null]
  createdAt timestamp [default: `now()`]
  updatedAt timestamp
}

Table Role {
  id int [pk, increment]
  name varchar(500) [unique]
  description text
  isActive boolean [default: true]
  createdById int [null, ref: > User.id]
  updatedById int [null, ref: > User.id]
  deletedAt timestamp [null]
  createdAt timestamp [default: `now()`]
  updatedAt timestamp
}

Table Permission {
  id int [pk, increment]
  name varchar(500)
  description text
  path varchar(1000)
  method HTTPMethod
  isActive boolean [default: true]
  createdById int [null, ref: > User.id]
  updatedById int [null, ref: > User.id]
  deletedAt timestamp [null]
  createdAt timestamp [default: `now()`]
  updatedAt timestamp
}

Table RefreshToken {
  token text [unique]
  userId int [ref: > User.id]
  expiresAt timestamp
  createdAt timestamp [default: `now()`]
}

Table VerificationCode {
  id int [pk, increment]
  email varchar(500) [unique]
  code varchar(50)
  type VerificationCodeCodeType
  userId int [null, ref: > User.id]
  expiresAt timestamp
  createdAt timestamp [default: `now()`]
}

Table Message {
  id int [pk, increment]
  fromUserId int [ref: > User.id]
  toUserId int [ref: > User.id]
  content text
  readAt timestamp [null]
  createdAt timestamp [default: `now()`]
}

Table Doctor {
  id int [pk, increment]
  userId int [unique, ref: > User.id]
  specialization varchar(500)
  certifications text[]
  workingHours json
  isAvailable boolean [default: true]
  createdAt timestamp [default: `now()`]
  updatedAt timestamp
}

Table DoctorSchedule {
  id int [pk, increment]
  doctorId int [ref: > Doctor.id]
  date timestamp
  isOff boolean [default: false]
  shift Shift
  createdAt timestamp [default: `now()`]
  updatedAt timestamp
}

Table Appointment {
  id int [pk, increment]
  userId int [ref: > User.id]
  doctorId int [ref: > Doctor.id]
  serviceId int [ref: > Service.id]
  appointmentTime timestamp
  isAnonymous boolean [default: false]
  type AppointmentType
  status AppointmentStatus
  notes text [null]
  createdAt timestamp [default: `now()`]
  updatedAt timestamp
}

Table MedicalRecord {
  id int [pk, increment]
  userId int [ref: > User.id]
  doctorId int [ref: > Doctor.id]
  diagnosis text
  notes text [null]
  createdAt timestamp [default: `now()`]
  updatedAt timestamp
}

Table TreatmentProtocol {
  id int [pk, increment]
  name varchar(500)
  description text [null]
  targetDisease varchar(500)
  createdById int [ref: > User.id]
  updatedById int [ref: > User.id]
  createdAt timestamp [default: `now()`]
  updatedAt timestamp
}

Table ProtocolMedicine {
  id int [pk, increment]
  protocolId int [ref: > TreatmentProtocol.id]
  medicineId int [ref: > Medicine.id]
  dosage varchar(100)
  frequency varchar(100)
  duration varchar(100)
  notes text [null]
  createdAt timestamp [default: `now()`]
  updatedAt timestamp
}

Table Medicine {
  id int [pk, increment]
  name varchar(500)
  description text [null]
  unit varchar(100)
  price decimal(10,2)
  createdAt timestamp [default: `now()`]
  updatedAt timestamp
}

Table PatientTreatment {
  id int [pk, increment]
  patientId int [ref: > User.id]
  protocolId int [ref: > TreatmentProtocol.id]
  customMedications json [null]
  notes text [null]
  startDate timestamp
  endDate timestamp [null]
  createdById int [ref: > User.id]
  medicineId int [ref: > Medicine.id]
  medicalRecordId int [null, ref: > MedicalRecord.id]
  createdAt timestamp [default: `now()`]
  updatedAt timestamp
}

Table Reminder {
  id int [pk, increment]
  userId int [ref: > User.id]
  type ReminderType
  message text
  remindAt timestamp
  isSent boolean [default: false]
  createdAt timestamp [default: `now()`]
}

Table TestResult {
  id int [pk, increment]
  userId int [ref: > User.id]
  doctorId int [ref: > Doctor.id]
  type TestType
  value float
  unit varchar(50)
  resultDate timestamp
  createdAt timestamp [default: `now()`]
  updatedAt timestamp
}

Table BlogPost {
  id int [pk, increment]
  title varchar(500)
  content text
  authorId int [ref: > User.id]
  isPublished boolean [default: false]
  createdAt timestamp [default: `now()`]
  updatedAt timestamp
}

Table EducationMaterial {
  id int [pk, increment]
  title varchar(500)
  content text
  tags text[]
  isPublic boolean [default: true]
  createdAt timestamp [default: `now()`]
  updatedAt timestamp
}

Table Service {
  id int [pk, increment]
  name varchar(500)
  price decimal(10,2)
  type ServiceType
  description text
  imageUrl varchar [default: '']
  content text
  createdAt timestamp [default: `now()`]
  updatedAt timestamp
}

Table ServiceSchedule {
  id int [pk, increment]
  serviceId int [ref: > Service.id]
  dayOfWeek DayOfWeek
  startTime timestamp
  endTime timestamp
  createdAt timestamp [default: `now()`]
  updatedAt timestamp
}

// Many-to-Many Relationships
Table UserPermission {
  userId int [ref: > User.id]
  permissionId int [ref: > Permission.id]
}

Table RolePermission {
  roleId int [ref: > Role.id]
  permissionId int [ref: > Permission.id]
}

// Indexes
Index User_email on User (email)
Index User_totpSecret on User (totpSecret)
Index RefreshToken_expiresAt on RefreshToken (expiresAt)
Index VerificationCode_email_code_type on VerificationCode (email, code, type)
Index VerificationCode_expiresAt on VerificationCode (expiresAt)
Index DoctorSchedule_doctorId_date on DoctorSchedule (doctorId, date)
Index DoctorSchedule_date_shift on DoctorSchedule (date, shift)
Index ProtocolMedicine_protocolId_medicineId on ProtocolMedicine (protocolId, medicineId) [unique]
